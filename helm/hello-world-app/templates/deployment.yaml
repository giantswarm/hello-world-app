apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ tpl .Values.resource.default.name . }}
  labels:
    app: {{ tpl .Values.resource.default.name . }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ tpl .Values.resource.default.name . }}
  template:
    metadata:
      labels:
        app: {{ tpl .Values.resource.default.name . }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                  - {{ tpl .Values.resource.default.name . }}
            topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      serviceAccountName: {{ tpl .Values.resource.default.name . }}-service-account
      containers:
      - name: helloworld
        image: '{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}'
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            cpu: 50m
            memory: 50Mi
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        securityContext:
          readOnlyRootFilesystem: true
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ tpl .Values.resource.default.name . }}-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: {{ tpl .Values.resource.default.name . }}
