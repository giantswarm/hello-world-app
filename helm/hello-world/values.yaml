# Default values for hello-world.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: gsoci.azurecr.io
  repository: giantswarm/helloworld
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true

service:
  type: ClusterIP
  port: 80
  labels: {}
  annotations: {}

ingress:
  enabled: true
  className: nginx
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt-giantswarm
  hosts:
  - host: hello.cluster.provider.gigantic.io
    paths:
    - path: /
      pathType: Prefix
  tls:
  - secretName: hello-world-tls
    hosts:
    - hello.cluster.provider.gigantic.io

resources:
  requests:
    cpu: 200m
    memory: 50Mi
  limits:
    cpu: 400m
    memory: 100Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

topologySpreadConstraints:
- labelSelector:
    matchLabels:
      app.kubernetes.io/name: '{{ include "hello-world.name" . }}'
      app.kubernetes.io/instance: '{{ .Release.Name }}'
  topologyKey: topology.kubernetes.io/zone
  maxSkew: 1
  whenUnsatisfiable: ScheduleAnyway
- labelSelector:
    matchLabels:
      app.kubernetes.io/name: '{{ include "hello-world.name" . }}'
      app.kubernetes.io/instance: '{{ .Release.Name }}'
  topologyKey: kubernetes.io/hostname
  maxSkew: 1
  whenUnsatisfiable: ScheduleAnyway

podDisruptionBudget:
  enabled: true
  # Define either 'minAvailable' or 'maxUnavailable', never both.
  # minAvailable: 1
  maxUnavailable: 1

serviceMonitor:
  enabled: false
  team: "team-awesome"
  instance: "hello-world"

global:
  podSecurityStandards:
    enforced: false
